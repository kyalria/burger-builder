{"version":3,"sources":["components/burger/burgeringredients/burgeringredients.module.css","components/Navigation/Sidedrawer/sidedrawer.module.css","components/Navigation/Toolbar/Toolbar.module.css","components/burger/buildcontrols/buildcontrol/buildcontrol.module.css","components/UI/Input/input.module.css","components/Navigation/Navigationitems/Navigationitem/Navigationitem.module.css","components/burger/buildcontrols/buildcontrols.module.css","components/UI/Button/Button.module.css","components/Layout/layout.module.css","components/Logo/Logo.module.css","assets/images/burger.png","components/Navigation/Navigationitems/Navigationitems.module.css","components/UI/Backdrop/Backdrop.module.css","components/burger/burger.module.css","components/UI/Modal/Modal.module.css","components/UI/Spinner/Spinner.module.css","components/CheckoutSummary/checkoutsummary.module.css","containers/ContactData/contactdata.module.css","components/Order/Order.module.css","hoc/auxiliary.js","components/Logo/Logo.js","components/Navigation/Navigationitems/Navigationitem/Navigationitem.js","components/Navigation/Navigationitems/Navigationitems.js","components/Navigation/Toolbar/Toolbar.js","components/UI/Backdrop/Backdrop.js","components/Navigation/Sidedrawer/sidedrawer.js","components/Layout/Layout.js","components/burger/burgeringredients/burgeringredients.js","components/burger/burger.js","components/burger/buildcontrols/buildcontrol/buildcontrol.js","components/burger/buildcontrols/buildcontrols.js","components/UI/Modal/Modal.js","components/UI/Button/Button.js","components/burger/Ordersummary/OrderSummary.js","axios-orders.js","components/UI/Spinner/Spinner.js","hoc/errorHandling/errorhandler.js","store/actions/auth.js","store/actions/action.js","containers/burger-bulder/burgerbuilder.js","store/actions/burgerbuilder.js","store/actions/orders.js","components/CheckoutSummary/checkoutsummary.js","components/UI/Input/input.js","containers/ContactData/contactdata.js","containers/Checkout/checkout.js","components/Order/Order.js","containers/Orders/orders.js","containers/Auth/Auth.js","containers/Logout/logout.js","App.js","serviceWorker.js","store/reducer/reducer.js","store/reducer/order.js","store/reducer/auth.js","index.js"],"names":["module","exports","auxiliary","props","children","logo","className","classes","Logo","src","burgerimg","alt","NavItem","NavigationItem","to","link","activeClassName","active","NavItems","NavigationItems","isAuth","toolbar","Toolbar","DrawerToggle","onClick","clicked","alignlogo","navdisplay","backdrop","show","Backdrop","closed","SideDrawer","attachedclasses","Close","open","Open","join","Layout","state","showBackdrop","showSideDrawer","showBackdropHandler","setState","showSideDrawerHandler","this","isAuthenticate","Content","Component","connect","auth","token","burgerIngredient","ingredient","type","BreadBottom","BreadTop","Seeds1","Seeds2","Meat","Bacon","Salad","Cheese","burger","transformedIngredients","Object","keys","ingredients","map","igkey","Array","_","i","key","reduce","arr","el","concat","length","Burger","buildControl","BuildControl","Label","label","Less","removed","disabled","disable","More","added","controls","buildControls","BuildControls","price","ctrl","ingredientadd","ingredientremove","OrderButton","purchase","ordered","modal","Modal","style","transform","opacity","button","Button","orderSummary","continue","instance","axios","create","baseURL","Spinner","loader","withErrorHandler","WrappedComponents","error","confirmError","interceptors","request","use","response","message","authSuccess","tokenid","id","userId","logout","localStorage","removeItem","salad","bacon","cheese","meat","BurgerBuilder","purchasing","loading","purchaseHandler","updatepurchasable","sum","cancelPurchase","ingredientaddHandler","newval","updatedingredients","newprice","totalprice","removeIngredientHandler","oldval","continuePurchase","history","push","onInitIngredients","disabledinfo","ings","onIngredientsAdd","onIngredientsRem","OrderSummary","burgerbuilder","building","dispatch","ingName","ingredientName","get","then","ingredientlist","data","catch","onPurchasing","WitherrorHandler","Checkoutsummary","cancel","input","inputelement","inputcss","inputElement","errormsg","invalid","shouldValidate","touched","Invalid","inputtype","elementConfig","value","onChange","changed","options","option","displayval","Input","Contact","personinfo","name","elementType","placeholder","validation","required","validity","city","phone","email","deliveryType","formIsValid","orderHandler","event","preventDefault","order","customer","onPurchase","checkValidity","rules","trim","changeHandler","index","updateForm","updateElement","target","isformvalid","updatedformelement","customerData","config","content","customerelement","onSubmit","orderData","post","orderId","purchaseFailure","actions","WithErrorHandler","Checkout","cancelHandler","continueHandler","summary","purchaseinit","purchaseRedirect","purchased","width","margin","path","match","component","ingredientname","amount","ingredientoutput","ig","Order","Orders","onFetching","orders","queryParams","res","fetchedorder","err","action","Auth","password","isSignup","submitHandler","onAuth","signupHandler","redirec","isIngs","authData","returnSecureToken","url","setItem","idToken","localId","console","log","authFail","Logout","onLogout","App","exact","withRouter","getItem","Boolean","window","location","hostname","initialstate","reducer","newOrder","rootreducer","combineReducers","orderreducer","authreducer","composeEnhancers","compose","store","createStore","applyMiddleware","thunk","app","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.b769f4cc.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"BreadBottom\":\"burgeringredients_BreadBottom__2N7vv\",\"BreadTop\":\"burgeringredients_BreadTop__VcuMw\",\"Seeds1\":\"burgeringredients_Seeds1__3eU9t\",\"Seeds2\":\"burgeringredients_Seeds2__1T9Dg\",\"Meat\":\"burgeringredients_Meat__1SQGa\",\"Cheese\":\"burgeringredients_Cheese__2HDuE\",\"Salad\":\"burgeringredients_Salad__2oveh\",\"Bacon\":\"burgeringredients_Bacon__2vK8t\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"SideDrawer\":\"sidedrawer_SideDrawer__1PKqL\",\"Open\":\"sidedrawer_Open__3AFQd\",\"Close\":\"sidedrawer_Close__hCyNQ\",\"Logo\":\"sidedrawer_Logo__1hLv8\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Toolbar\":\"Toolbar_Toolbar__2LTk2\",\"DrawerToggle\":\"Toolbar_DrawerToggle__2_eah\",\"navdisplay\":\"Toolbar_navdisplay__1b9yv\",\"alignlogo\":\"Toolbar_alignlogo__3JWKv\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"BuildControl\":\"buildcontrol_BuildControl__CD8vY\",\"Label\":\"buildcontrol_Label__1oyjH\",\"Less\":\"buildcontrol_Less__23CeF\",\"More\":\"buildcontrol_More__hufvk\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Input\":\"input_Input__Fq_ig\",\"Label\":\"input_Label__moTtH\",\"inputElement\":\"input_inputElement__2UbrK\",\"Invalid\":\"input_Invalid__fvLtL\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"NavigationItem\":\"Navigationitem_NavigationItem__1orr_\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"BuildControls\":\"buildcontrols_BuildControls__24lqZ\",\"OrderButton\":\"buildcontrols_OrderButton__1m7eG\",\"enable\":\"buildcontrols_enable__2Jd8V\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Button\":\"Button_Button__1uyxD\",\"Success\":\"Button_Success__3LPC2\",\"Danger\":\"Button_Danger__2q1oo\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Content\":\"layout_Content__2KRDM\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Logo\":\"Logo_Logo__2mY7s\"};","module.exports = __webpack_public_path__ + \"static/media/burger.b8503d26.png\";","// extracted by mini-css-extract-plugin\nmodule.exports = {\"NavigationItems\":\"Navigationitems_NavigationItems__3XjiV\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Backdrop\":\"Backdrop_Backdrop__2Qr8Y\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Burger\":\"burger_Burger__3DMAk\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Modal\":\"Modal_Modal__b-ImW\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"loader\":\"Spinner_loader__1bPE8\",\"load2\":\"Spinner_load2__nhzYd\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"checkoutsummary\":\"checkoutsummary_checkoutsummary__pKU0n\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Contact\":\"contactdata_Contact__3n7xa\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Order\":\"Order_Order__B79Vw\"};","//import React from 'react'\r\n\r\nconst auxiliary=(props)=>props.children;\r\nexport default auxiliary;","import React from 'react';\r\nimport classes from './Logo.module.css'\r\nimport burgerimg from '../../assets/images/burger.png'\r\n\r\nconst logo=()=>{\r\n    return(\r\n        <div className={classes.Logo}>\r\n            <img src={burgerimg} alt=\"burger\"></img>\r\n        </div>\r\n    )\r\n}\r\nexport default logo;","import React from 'react';\r\nimport classes from './Navigationitem.module.css';\r\nimport {NavLink} from 'react-router-dom';\r\n\r\nconst NavItem=(props)=>{\r\n    return(\r\n        \r\n        <li className={classes.NavigationItem}>\r\n            \r\n            <NavLink to={props.link} activeClassName={classes.active}>{props.children}</NavLink>\r\n            \r\n        </li>\r\n    )\r\n\r\n}\r\n\r\nexport default NavItem;","import React from 'react';\r\nimport NavItem from './Navigationitem/Navigationitem';\r\nimport classes from './Navigationitems.module.css';\r\n\r\n\r\nconst NavItems=(props)=>(\r\n    <ul className={classes.NavigationItems}>\r\n        \r\n        <NavItem link=\"/\"> Burger-Builder</NavItem>\r\n        {props.isAuth?<NavItem link=\"/orders\">Orders</NavItem>:null}\r\n        {props.isAuth?<NavItem link=\"/logout\">Logout</NavItem>:\r\n                      <NavItem link=\"/Auth\">Authenticate</NavItem>}\r\n        \r\n\r\n    </ul>\r\n)\r\nexport default NavItems;","import React from 'react';\r\nimport classes from './Toolbar.module.css';\r\nimport Logo from '../../Logo/Logo'\r\nimport NavItems from '../Navigationitems/Navigationitems'\r\n\r\nconst toolbar=(props)=>{\r\n    return(\r\n    <header className={classes.Toolbar}>\r\n        <div className={classes.DrawerToggle} onClick={props.clicked}>\r\n            <div></div>\r\n            <div></div>\r\n            <div></div>\r\n\r\n        </div>\r\n        <div className={classes.alignlogo}>\r\n        <Logo />\r\n        </div >\r\n       \r\n        <div className={classes.navdisplay}>\r\n            <NavItems isAuth={props.isAuth}/>\r\n        </div>\r\n    </header>\r\n    )\r\n}\r\n\r\nexport default toolbar ;","import React from 'react';\r\nimport classes from './Backdrop.module.css';\r\n\r\nconst backdrop=(props)=>(\r\n    props.show?<div className={classes.Backdrop} onClick={props.closed}></div>  : null\r\n)\r\nexport default backdrop;","import React from 'react';\r\nimport Logo from '../../Logo/Logo';\r\nimport NavItems from '../Navigationitems/Navigationitems';\r\nimport classes from './sidedrawer.module.css';\r\nimport Backdrop from '../../UI/Backdrop/Backdrop';\r\nimport Auxiliary from '../../../hoc/auxiliary';\r\n//import { ProgressPlugin } from 'webpack';\r\n\r\nconst SideDrawer=(props)=>{\r\n   // console.log(props.open);\r\n    let attachedclasses=[classes.SideDrawer,classes.Close];\r\n    if(props.open)\r\n    {\r\n        attachedclasses=[classes.SideDrawer,classes.Open]\r\n    }\r\n    \r\n    \r\n    return(\r\n        <Auxiliary>\r\n        <Backdrop show={props.show}  closed={props.clicked}/>\r\n        <div className={attachedclasses.join(' ')} onClick={props.clicked}>\r\n            <div className={classes.Logo}>\r\n            <Logo/>\r\n            </div>\r\n            <nav>\r\n              <NavItems isAuth={props.isAuth}/>\r\n            </nav>\r\n        </div>\r\n        </Auxiliary>\r\n    )\r\n}\r\nexport default SideDrawer;","import React,{ Component } from 'react';\r\nimport Auxiliary from '../../hoc/auxiliary'\r\nimport classes from './layout.module.css';\r\nimport Toolbar from '../Navigation/Toolbar/Toolbar'\r\nimport SideDrawer from '../Navigation/Sidedrawer/sidedrawer';\r\nimport {connect} from 'react-redux';\r\nclass Layout extends Component\r\n{\r\n  state={\r\n    showBackdrop:false,\r\n    showSideDrawer:false\r\n  }\r\n  showBackdropHandler=()=>{\r\n    this.setState({showBackdrop:false,showSideDrawer:false});\r\n  }\r\n  showSideDrawerHandler=()=>{\r\n    this.setState({showBackdrop:true, showSideDrawer:true});\r\n  }\r\n  \r\n    render(){\r\n\r\n      //console.log(\"rendering....\")\r\n      //console.log(this.state.showBackdrop);\r\n      //console.log(this.state.showSideDrawer);\r\n      \r\n      return(\r\n        <Auxiliary >\r\n         <Toolbar\r\n          clicked={this.showSideDrawerHandler}\r\n          isAuth={this.props.isAuthenticate}/>\r\n         <SideDrawer \r\n         show={this.state.showBackdrop} \r\n         open={this.state.showSideDrawer} \r\n         clicked={this.showBackdropHandler}\r\n         isAuth={this.props.isAuthenticate}/>\r\n          <main className={classes.Content}>\r\n           {this.props.children}\r\n         </main> \r\n         </Auxiliary>\r\n\r\n      )\r\n    }\r\n    \r\n   }\r\nconst mapStateToProps=state=>{\r\n  return{\r\n      isAuthenticate:state.auth.token!==null\r\n  }\r\n}\r\nexport default connect(mapStateToProps)(Layout);","import React from 'react';\r\nimport classes from './burgeringredients.module.css';\r\nimport PropType from 'prop-types';\r\n\r\nconst burgerIngredient=(props)=>{\r\n    let ingredient=null;\r\n   // console.log(props);\r\n    switch(props.type)\r\n    {\r\n        case('breadbottom'):\r\n           ingredient=(\r\n               <div className={classes.BreadBottom}></div>\r\n               );\r\n               break;\r\n        case('breadtop'):\r\n             ingredient=(\r\n                 <div className={classes.BreadTop}>\r\n                     <div className={classes.Seeds1}></div>\r\n                     <div className={classes.Seeds2}></div>\r\n                </div>\r\n             );\r\n             break;\r\n        case('meat'):\r\n             ingredient=(\r\n                 <div className={classes.Meat}></div>\r\n             );\r\n             break;\r\n         case('bacon'):\r\n             ingredient=(\r\n                 <div className={classes.Bacon}></div>\r\n             );\r\n             break;\r\n        case('salad'):\r\n             ingredient=(\r\n                 <div className={classes.Salad}></div>\r\n             );\r\n             break;\r\n         case('cheese'):\r\n             ingredient=(\r\n                 <div className={classes.Cheese}></div>\r\n             );\r\n             break;\r\n        default:\r\n            ingredient=null;\r\n    }\r\n    return ingredient;\r\n}\r\n\r\nburgerIngredient.propTypes={\r\n    type:PropType.string.isRequired   //this makes it neccessary else error\r\n}\r\n\r\nexport default burgerIngredient;","import React from 'react';\r\nimport BurgerIngredient from './burgeringredients/burgeringredients';\r\nimport classes from './burger.module.css';\r\n\r\nconst burger=(props)=>{\r\n     //console.log(props);\r\n     //let ttrI={...props.ingredients};\r\n     \r\n    let transformedIngredients=Object.keys(props.ingredients).map(igkey=>{\r\n         return [...Array(props.ingredients[igkey])].map((_,i)=>\r\n         {\r\n             return <BurgerIngredient key={igkey+i} type={igkey}/>\r\n             \r\n         })\r\n     }).reduce((arr,el)=>{\r\n         return arr.concat(el);\r\n     },[]);\r\n    //console.log(transformedIngredients);\r\n\r\n    if(transformedIngredients.length === 0)\r\n    {\r\n        transformedIngredients=\"please add ingredients !!\";\r\n    }  \r\n\r\n\r\n    \r\n    \r\n    return(\r\n    <div className={classes.Burger}>\r\n        <BurgerIngredient type=\"breadtop\"/>\r\n        {transformedIngredients}\r\n        <BurgerIngredient type=\"breadbottom\"/>\r\n    </div>\r\n    )\r\n}\r\n\r\n\r\nexport default burger;","import React from 'react';\r\nimport classes from './buildcontrol.module.css';\r\n\r\n\r\nconst buildControl=(props)=>{\r\n     //console.log(props.disable);\r\n    \r\n    return (\r\n    \r\n        <div className={classes.BuildControl}>\r\n            <div className={classes.Label}> {props.label} </div>\r\n            <button className={classes.Less} onClick={props.removed}\r\n            disabled={props.disable}>less</button>\r\n            <button className={classes.More} onClick={props.added}>more</button>\r\n            \r\n           \r\n\r\n        </div>\r\n        \r\n    )\r\n}\r\nexport default buildControl;","import React from 'react';\r\nimport BuildControl from './buildcontrol/buildcontrol';\r\nimport classes from './buildcontrols.module.css';\r\n\r\nconst controls=[\r\n    {label:'SALAD' , type:'salad'},\r\n    {label:'MEAT' , type:'meat'},\r\n    {label:'CHEESE',type:'cheese'},\r\n    {label:'BACON' , type:'bacon'}\r\n]\r\nconst buildControls =(props)=>{\r\n    //console.log(props)\r\n    return (\r\n       \r\n        <div className={classes.BuildControls}>\r\n             <h3>Price: {props.price}</h3>\r\n          {controls.map(ctrl=>{\r\n              return(\r\n            \r\n              <BuildControl \r\n              key={ctrl.label}\r\n               label={ctrl.label} \r\n               added={()=>props.ingredientadd(ctrl.type)} \r\n               removed={()=>props.ingredientremove(ctrl.type)}\r\n               disable={props.disable[ctrl.type]}/>\r\n            \r\n              )\r\n          })}\r\n          <button \r\n          className={classes.OrderButton}\r\n           disabled={!props.purchase}\r\n           onClick={props.ordered}>{props.isAuth?\"ORDER NOW\":\"SIGN IN TO ORDER\"}</button>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default buildControls;","import React from 'react';\r\nimport classes from './Modal.module.css';\r\nimport Auxiliary from '../../../hoc/auxiliary';\r\nimport Backdrop from '../Backdrop/Backdrop';\r\n\r\nconst modal=(props)=>{\r\n    return (\r\n        <Auxiliary>\r\n        <Backdrop show={props.show} closed={props.closed}/>\r\n        <div className={classes.Modal}\r\n        style={{\r\n            transform: props.show ? 'translateY(0)' : 'translateY(-100vh)',\r\n            opacity: props.show ? '1' : '0'\r\n        }}>\r\n        {props.children}\r\n        </div>\r\n        </Auxiliary>\r\n    )\r\n}\r\n\r\nexport default modal;","import React from 'react';\r\nimport classes from './Button.module.css';\r\n\r\nconst button=(props)=>{\r\n    return(\r\n        <button className={[classes.Button,classes[props.type]].join(' ')} \r\n        onClick={props.clicked}\r\n        disabled={props.disable}>\r\n            {props.children}\r\n        </button>\r\n    )\r\n\r\n}\r\n\r\nexport default button;","import React from 'react';\r\nimport Button from '../../UI/Button/Button';\r\n\r\n\r\nconst orderSummary=(props)=>{\r\n\r\n    const ingredients=Object.keys(props.ingredients).map(igkey=>{\r\n        return(\r\n        <li>\r\n            {igkey} : {props.ingredients[igkey]}\r\n        </li>\r\n        )\r\n    })\r\n\r\n    return (\r\n        <div>\r\n            <h3>Order Summary</h3>\r\n            <p>A delicious Burger</p>\r\n            <ul>\r\n                {ingredients}\r\n            </ul>\r\n            <h3> Order Total : Rs.{props.price}</h3>\r\n            <Button clicked={props.closed} type=\"Danger\">Cancel</Button>\r\n            <Button type=\"Success\" clicked={props.continue} >Continue</Button>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default orderSummary;","import axios from 'axios';\r\n\r\nconst instance=axios.create({\r\n    baseURL:\"https://burger-builder-5ea35.firebaseio.com/\"\r\n}\r\n)\r\n\r\nexport default instance;","import React from 'react';\r\nimport classes from './Spinner.module.css';\r\n\r\nconst Spinner=()=>{\r\n    return(\r\n    <div className={classes.loader}>Loading....</div>\r\n    )\r\n}\r\nexport default Spinner;\r\n","import React,{ Component } from 'react';\r\nimport Modal from '../../components/UI/Modal/Modal';\r\nimport Auxiliary from '../auxiliary';\r\n\r\n\r\nconst withErrorHandler=(WrappedComponents,axios)=>{\r\n    return class extends Component{\r\n       state={\r\n           error:null\r\n       }\r\n       componentDidMount(){\r\n         axios.interceptors.request.use(null,error=>{\r\n             this.setState({error:null});\r\n\r\n         })\r\n         axios.interceptors.response.use(null,error=>{\r\n             this.setState({error:error});\r\n         })\r\n       }\r\n       confirmError=()=>{\r\n          this.setState({error:null});\r\n       }\r\n        render(){\r\n        return(\r\n            <Auxiliary>\r\n            <Modal show={this.state.error} closed={this.confirmError}>\r\n                {this.state.error? this.state.error.message : null}\r\n            </Modal>\r\n            <WrappedComponents  {...this.props}/>\r\n            \r\n        </Auxiliary>\r\n        )\r\n    }\r\n}\r\n    \r\n       \r\n    \r\n}\r\n\r\nexport default withErrorHandler;","import *as actionTypes from './action';\r\nimport axios from 'axios';\r\n\r\nexport const authStart=()=>{\r\n    return{\r\n        type:actionTypes.AUTH_START,\r\n       \r\n    }\r\n}\r\nexport const authFail=(err)=>{\r\n    return{ \r\n        type:actionTypes.AUTH_FAILURE,\r\n        err:err\r\n    }\r\n}\r\nexport const authSuccess=(tokenid,id)=>{\r\n    return{\r\n        type:actionTypes.AUTH_SUCCESS,\r\n        token:tokenid,\r\n        userId:id\r\n    }\r\n}\r\nexport const logout=()=>{\r\n    localStorage.removeItem(\"token\");\r\n    localStorage.removeItem(\"userId\");\r\n    return{\r\n        type:actionTypes.LOGOUT\r\n    }\r\n}\r\n\r\nexport const auth=(email,password,isSignup)=>{\r\n    //console.log(\"signup=\",isSignup)\r\n    return dispatch=>{\r\n        dispatch(authStart());\r\n        const authData={\r\n            email:email,\r\n            password:password,\r\n            returnSecureToken:true\r\n        }\r\n        let url=\"https://identitytoolkit.googleapis.com/v1/accounts:signUp?key=AIzaSyCFBgLKPrFv-bvWpXHA_W0jI-Rf15A1ZN8\";\r\n        if(!isSignup){\r\n            url=\"https://identitytoolkit.googleapis.com/v1/accounts:signInWithPassword?key=AIzaSyCFBgLKPrFv-bvWpXHA_W0jI-Rf15A1ZN8\";\r\n        }\r\n        axios.post(url,authData)\r\n        .then(response=>{\r\n            //console.log(\"signup\",isSignup);\r\n            //console.log(response);\r\n            localStorage.setItem(\"token\",response.data.idToken);\r\n            localStorage.setItem(\"userId\",response.data.localId);\r\n            dispatch(authSuccess(response.data.idToken,response.data.localId));\r\n\r\n            //dispatch(authlogout(response.data.expiresIn));\r\n        })\r\n        .catch(err=>{\r\n            console.log(err);\r\n           dispatch(authFail(err));\r\n    })\r\n        \r\n    }\r\n}\r\n\r\nexport const checkStatus=()=>{\r\n    return dispatch=>{\r\n        const token=localStorage.getItem('token');\r\n        const userId=localStorage.getItem('userId');\r\n        if(token!==null)\r\n        {\r\n            dispatch(authSuccess(token,userId));\r\n        }\r\n        else{\r\n            dispatch(logout());\r\n        }\r\n    }\r\n}","export const ADD_INGREDIENT=\"ADD_INGREDIENT\";\r\nexport const REMOVE_INGREDIENT=\"REMOVE_INGREDIENT\";\r\nexport const SET_INGREDIENT=\"SET_INGREDIENT\";\r\nexport const FAILED=\"FAILED\";\r\n\r\nexport const PURCHASE_SUCCESS=\"PURCHASE_SUCCESS\";\r\nexport const PURCHASE_FAILURE=\"PURCHASE_FAILURE\";\r\nexport const PURCHASE_START=\"PURCHASE_START\";\r\nexport const PURCHASE_INIT=\"PURCHASE_INIT\";\r\n\r\nexport const FETCHORDER_SUCCESS=\"FETCHORDER_SUCCESS\";\r\nexport const FETCHORDER_FAILURE=\"FETCHORDER_FAILURE\";\r\nexport const FETCHORDER_START=\"FETCHORDER_START\";\r\n\r\nexport const AUTH_START=\"AUTH_START\";\r\nexport const AUTH_SUCCESS=\"AUTH_SUCCESS\";\r\nexport const AUTH_FAILURE=\"AUTH_FAILURE\";\r\nexport const LOGOUT=\"LOGOUT\";"," import React, { Component } from 'react';\r\n import Aux from '../../hoc/auxiliary';\r\n import Burger from '../../components/burger/burger';\r\n import BuildControls from '../../components/burger/buildcontrols/buildcontrols';\r\n import Modal from '../../components/UI/Modal/Modal';\r\n import OrderSummary from '../../components/burger/Ordersummary/OrderSummary';\r\n import axios from '../../axios-orders';\r\n import Spinner from '../../components/UI/Spinner/Spinner';\r\n import WitherrorHandler from  '../../hoc/errorHandling/errorhandler';\r\n import {connect} from 'react-redux';\r\n import * as burgerBuilderActions from '../../store/actions/index';\r\n\r\n const price={\r\n    salad:3,\r\n    bacon:7,\r\n    cheese:6,\r\n    meat:7\r\n}\r\n\r\n\r\n \r\n \r\n class BurgerBuilder extends Component\r\n {\r\n     state={\r\n         \r\n         purchasing:false,\r\n         loading:false\r\n     }\r\n   componentDidMount(){\r\n      // console.log(this.props);\r\n       this.props.onInitIngredients();\r\n    }\r\n\r\n     purchaseHandler=()=>{\r\n         this.setState({\r\n             purchasing:true\r\n         })\r\n     }\r\n     \r\n    updatepurchasable=(ingredients)=>{\r\n        let sum=Object.keys(ingredients).map(igkey=>{\r\n           return ingredients[igkey];\r\n       }\r\n    ).reduce((sum,el)=>{\r\n           return sum+el;\r\n       })\r\n       return sum>0;\r\n     }\r\n\r\n    cancelPurchase=()=>{\r\n       // console.log(\"onClick\");\r\n       this.setState({\r\n         purchasing:false\r\n       });\r\n    }\r\n\r\n     ingredientaddHandler=(type)=>{\r\n     const oldval=this.state.ingredients[type];\r\n     const newval=oldval+1;\r\n     const updatedingredients={\r\n         ...this.state.ingredients\r\n     }\r\n     updatedingredients[type]=newval;\r\n     const oldprice=this.state.totalprice;\r\n     const newprice=oldprice+price[type];\r\n     this.setState({\r\n         ingredients:updatedingredients,\r\n         totalprice:newprice,\r\n        \r\n     })\r\n      this.updatepurchasable(updatedingredients);\r\n     };\r\n\r\n\r\n     removeIngredientHandler=(type)=>{\r\n        const oldval=this.state.ingredients[type];\r\n        if(oldval===0)\r\n        {\r\n          return;\r\n        }\r\n        else\r\n        {\r\n        const newval=oldval-1;\r\n        const updatedingredients={\r\n            ...this.state.ingredients\r\n        }\r\n        updatedingredients[type]=newval;\r\n        const oldprice=this.state.totalprice;\r\n        const newprice=oldprice-price[type];\r\n        this.setState({\r\n            ingredients:updatedingredients,\r\n            totalprice:newprice\r\n            \r\n        });\r\n        this.updatepurchasable(updatedingredients);\r\n       \r\n    }\r\n\r\n  };\r\n\r\n continuePurchase=()=>{\r\n     \r\n      //console.log(\"continuePurchase\",this.props.token)\r\n      if(this.props.token!==null){\r\n         // console.log(\"this.props.history\",this.props.history);\r\n      this.props.history.push('/checkout');\r\n      //console.log(\"this.props.history\",this.props.history);\r\n      }\r\n\r\n      else if(this.props.token==null){\r\n        this.props.history.push('/auth');\r\n      }\r\n        \r\n    }\r\n      \r\n  \r\n\r\n     render(){\r\n         //console.log(this.props);\r\n        const disabledinfo={\r\n            ...this.props.ings\r\n        };\r\n      \r\n        for(let key in disabledinfo)\r\n        {\r\n           disabledinfo[key]=disabledinfo[key]<=0;\r\n        }\r\n       // console.log(disabledinfo);\r\n       \r\n       \r\n     let modal=null;\r\n     let burger=<Spinner/>\r\n\r\n     if(this.props.ings)\r\n     {\r\n        \r\n         burger=(\r\n             <Aux>\r\n            <Burger ingredients={this.props.ings}/>\r\n                       \r\n            <BuildControls \r\n            isAuth={this.props.token!==null}\r\n            ordered={this.purchaseHandler}\r\n            purchase={this.updatepurchasable(this.props.ings)}\r\n            ingredientadd={this.props.onIngredientsAdd} \r\n            ingredientremove={this.props.onIngredientsRem}\r\n            disable={disabledinfo}\r\n            price={this.props.price}/>\r\n            </Aux>\r\n         );\r\n         modal=(\r\n            <Modal show={this.state.purchasing} \r\n             closed={this.cancelPurchase}>\r\n          \r\n            <OrderSummary \r\n              ingredients={this.props.ings}\r\n              continue={this.continuePurchase}\r\n              closed={this.cancelPurchase}\r\n              price={this.props.price}\r\n              />\r\n              </Modal>)\r\n     }\r\n      \r\n       \r\n      /* if(this.state.loading)\r\n       {\r\n        modal=(\r\n        <Modal show={this.state.purchasing} \r\n        closed={this.cancelPurchase}>\r\n    \r\n           <Spinner/>\r\n           </Modal>\r\n        )\r\n       }   */\r\n    \r\n        \r\n        \r\n        //console.log(\"modal\");\r\n        //console.log(modal);\r\n        //console.log(this.props);\r\n         return(\r\n             \r\n             <Aux>\r\n               {modal}\r\n               {burger}\r\n             </Aux>\r\n             \r\n         );\r\n     }\r\n    }\r\n\r\nconst mapStateToProps=state=>{\r\n    return{\r\n        ings:state.burgerbuilder.ingredients,\r\n        price:state.burgerbuilder.totalprice,\r\n        error:state.burgerbuilder.error,\r\n        token:state.auth.token,\r\n        building:state.burgerbuilder.building\r\n    }\r\n}\r\nconst mapDispatchToProps=dispatch=>{\r\n    return{\r\n        onIngredientsAdd:(ingName)=>dispatch(burgerBuilderActions.addIngredient(ingName)),\r\n        onIngredientsRem:(ingName)=>dispatch(burgerBuilderActions.removeIngredient(ingName)),\r\n        onInitIngredients:()=>dispatch(burgerBuilderActions.initIngredients()),\r\n        onPurchasing:()=>dispatch(burgerBuilderActions.purchaseInit())\r\n    }\r\n}\r\n export default connect(mapStateToProps,mapDispatchToProps)(WitherrorHandler(BurgerBuilder,axios)); ","import * as actionTypes from './action';\r\nimport axios from '../../axios-orders';\r\n\r\nexport const addIngredient=(name)=>{\r\n    return{\r\n    type:actionTypes.ADD_INGREDIENT,\r\n    ingredientName:name\r\n    }\r\n\r\n}\r\nexport const removeIngredient=(name)=>{\r\n    return{\r\n    type:actionTypes.REMOVE_INGREDIENT,\r\n    ingredientName:name\r\n    }\r\n\r\n}\r\nexport const setIngredients=(ingredient)=>{\r\n    return{\r\n        type:actionTypes.SET_INGREDIENT,\r\n        ingredientlist:ingredient\r\n    }\r\n}\r\nexport const failed=()=>{\r\n    return {\r\n        type:actionTypes.FAILED\r\n    }\r\n}\r\nexport const initIngredients=dispatch=>{\r\n    return dispatch=>{\r\n    axios.get(\"https://burger-builder-5ea35.firebaseio.com/ingredients.json\")\r\n    .then(response=>{\r\n        dispatch(setIngredients(response.data));\r\n    }).catch(error=>{\r\n        dispatch(failed());\r\n    })\r\n}\r\n}","import *as actionTypes from './action';\r\nimport axios from 'axios';\r\n\r\n\r\nexport const purchaseSuccess=(id,order)=>{\r\n    return {\r\n        type:actionTypes.PURCHASE_SUCCESS,\r\n        orderId:id,\r\n        orderData:order\r\n    }\r\n}\r\n\r\nexport const purchaseFailure=(error)=>{\r\n    return{\r\n        type:actionTypes.PURCHASE_FAILURE,\r\n        error:error\r\n    }\r\n}\r\n\r\nexport const purchaseStart=()=>{\r\n   return{\r\n       type:actionTypes.PURCHASE_START\r\n   }\r\n}\r\n\r\nexport const initPurchase=(orderData,token)=>{\r\n    //console.log(\"initPurchase\",token,\"  \",orderData);\r\n    return dispatch=>{\r\n        dispatch(purchaseStart());\r\n        axios.post('https://burger-builder-5ea35.firebaseio.com/order.json?auth=' + token,orderData)\r\n        .then(response=>{\r\n            //console.log(response);\r\n            dispatch(purchaseSuccess(response.data.name,orderData));\r\n        }).catch(error=>{\r\n            //console.log(error);\r\n            dispatch(purchaseFailure(error));\r\n        });\r\n    }\r\n}\r\nexport const purchaseInit=()=>{\r\n    return{\r\n        type:actionTypes.PURCHASE_INIT\r\n    }\r\n}\r\n\r\nexport const fetchOrderSuccess=(orders)=>{\r\n    return {\r\n        type:actionTypes.FETCHORDER_SUCCESS,\r\n        order:orders\r\n    }\r\n\r\n}\r\n\r\nexport const fetchOrderFailure=(error)=>{\r\n    return{\r\n        type:actionTypes.FETCHORDER_FAILURE,\r\n        error:error\r\n    }\r\n}\r\n\r\nexport const fetchOrderStart=()=>{\r\n    return{\r\n        type:actionTypes.FETCHORDER_START\r\n    }\r\n}\r\n\r\nexport const initFetchOrder=(token,userId)=>{\r\n   \r\n    return dispatch=>{\r\n        dispatch(fetchOrderStart());\r\n        const queryParams='?auth='+token+'&orderBy=\"userId\"&equalTo=\"'+ userId + '\"';\r\n        axios.get(\"https://burger-builder-5ea35.firebaseio.com/order.json\"+queryParams)\r\n        .then(res=>{\r\n            //console.log(\"response\",res);\r\n            const fetchedorder=[];\r\n          for(let ig in res.data)\r\n          {\r\n              fetchedorder.push({\r\n                  ...res.data[ig],\r\n                  key:ig\r\n              },\r\n              )\r\n          }\r\n          //console.log(\"fetchedorder\",fetchedorder);\r\n         dispatch(fetchOrderSuccess(fetchedorder));\r\n        }).catch(err=>{\r\n            dispatch(fetchOrderFailure(err));\r\n        })\r\n\r\n    }\r\n}","import React from 'react';\r\nimport Burger from '../burger/burger';\r\nimport Button from '../UI/Button/Button';\r\nimport classes from './checkoutsummary.module.css';\r\n\r\nconst Checkoutsummary=(props)=>{\r\n\r\n    return(\r\n        <div  className={classes.Checkoutsummary}>\r\n       <Burger ingredients={props.ingredients}/>\r\n       <Button type=\"Danger\" clicked={props.cancel}>CANCEL</Button>\r\n       <Button type=\"Success\" clicked={props.continue}>CONTINUE</Button>\r\n       </div>\r\n    )\r\n}\r\nexport default Checkoutsummary;","import React from 'react';\r\nimport classes from './input.module.css';\r\nconst input=(props)=>{\r\n    let inputelement;\r\n    let inputcss=[classes.inputElement];\r\n    let errormsg=null;\r\n    if(props.invalid && props.shouldValidate && props.touched)\r\n    {\r\n        inputcss.push(classes.Invalid);\r\n        errormsg=<p>Invalid</p>\r\n    }\r\n    switch(props.inputtype)\r\n    {\r\n        case(\"input\"):\r\n            inputelement=<input className={inputcss.join(' ')}\r\n             {...props.elementConfig} value={props.value} onChange={props.changed}/>\r\n            break;\r\n        case(\"textarea\"):\r\n            inputelement=<textarea className={inputcss.join(' ')}\r\n             {...props.elementConfig} \r\n             value={props.value} onChange={props.changed}/>\r\n            break;\r\n        case('select'):\r\n             inputelement=(\r\n             <select \r\n             className={inputcss.join(' ')}\r\n               value={props.value}>\r\n                            {props.elementConfig.options.map(option=>(\r\n                             <option value={option.value}>{option.displayval}</option>\r\n                            ))}\r\n                  </select>\r\n                  );\r\n                  break;\r\n\r\n        default:\r\n            inputelement=null;\r\n            break;\r\n\r\n            \r\n    }\r\n    return(\r\n        <div className={classes.Input}>\r\n            <label>{props.id}</label>\r\n            {inputelement}\r\n            {errormsg}\r\n        </div>\r\n    )\r\n\r\n}\r\nexport default input;","import React,{ Component } from 'react';\r\nimport Button from '../../components/UI/Button/Button';\r\nimport classes from './contactdata.module.css';\r\nimport axios from '../../axios-orders';\r\nimport Input from '../../components/UI/Input/input';\r\nimport {connect} from 'react-redux';\r\nimport *as actions from '../../store/actions/index';\r\nimport WithErrorHandler from '../../hoc/errorHandling/errorhandler';\r\n//import {withRouter} from 'react-router-dom';\r\n\r\n\r\nclass Contact extends Component{\r\n    state={\r\n        personinfo:{\r\n            name:{\r\n                elementType:'input',\r\n                elementConfig:{\r\n                    placeholder:'Your Name',\r\n                    type:'text',\r\n                },\r\n                value:'',\r\n                validation:{\r\n                    required:true,\r\n                },\r\n                validity:false,\r\n                touched:false\r\n\r\n            },\r\n            city:{\r\n                elementType:'input',\r\n                elementConfig:{\r\n                    placeholder:'Your City',\r\n                    type:'text',\r\n                },\r\n                value:'',\r\n                validation:{\r\n                    required:true,\r\n                },\r\n                validity:false,\r\n                touched:false\r\n            },\r\n            phone:{\r\n                elementType:'input',\r\n                elementConfig:{\r\n                    placeholder:'Your mobile',\r\n                    type:'text',\r\n                },\r\n                value:'',\r\n                validation:{\r\n                    required:true,\r\n                    length:10\r\n                   \r\n                },\r\n                validity:false,\r\n                touched:false\r\n            },\r\n                \r\n            email:{\r\n                elementType:'input',\r\n                elementConfig:{\r\n                    placeholder:'Your mail-id',\r\n                    type:'email',\r\n                },\r\n                value:'',\r\n                validation:{\r\n                    required:true,\r\n                   \r\n                },\r\n                validity:false,\r\n                touched:false\r\n\r\n            },\r\n            state:{\r\n                elementType:'input',\r\n                elementConfig:{\r\n                    placeholder:'Your state',\r\n                    type:'text',\r\n                },\r\n                value:'fastest',\r\n                validation:{\r\n                    required:true,\r\n                },\r\n                validity:false,\r\n                touched:false\r\n                \r\n            },\r\n            deliveryType:{\r\n                elementType:'select',\r\n                elementConfig:{\r\n                    options:[\r\n                        {value:'Fastest',displayval:'Fastest'},\r\n                        {value:'Cheapest ' ,displayval:'Cheapest'}\r\n                    ]\r\n                },\r\n                validity:true\r\n\r\n            }\r\n        },\r\n       \r\n        formIsValid:false\r\n    }\r\n\r\n    orderHandler=(event)=>{\r\n      event.preventDefault();\r\n     const order={\r\n        userId:this.props.userId,\r\n    \r\n         ingredients:this.props.ings,\r\n         price:this.props.price,\r\n         customer:{\r\n             ...this.state.personinfo\r\n         }\r\n     }\r\n        \r\n    //console.log(\"onSubmit\",order);\r\n     this.props.onPurchase(order,this.props.token);\r\n\r\n    \r\n    }\r\n\r\n\r\n    checkValidity=(value,rules)=>{\r\n        let validity=true;\r\n        if(!rules)\r\n        {\r\n            return true;\r\n        }\r\n        if(rules.required)\r\n        {\r\n            validity=value.trim()!=='' && validity;\r\n        }\r\n        if(rules.length)\r\n        {\r\n            validity=value.length===10 && validity;\r\n        }\r\n        return validity;\r\n\r\n    }\r\n    changeHandler=(event,index)=>{\r\n        const updateForm={\r\n            ...this.state.personinfo\r\n        }\r\n        const updateElement={\r\n            ...updateForm[index]\r\n        }\r\n        updateElement.value=event.target.value;\r\n        updateElement.validity=this.checkValidity(updateElement.value,updateElement.validation);\r\n        updateElement.touched=true;\r\n        updateForm[index]={...updateElement};\r\n        let isformvalid=true;\r\n        for(let updatedformelement in updateForm)\r\n        {\r\n           isformvalid=updateForm[updatedformelement].validity && isformvalid;\r\n        }\r\n        //console.log(isformvalid);\r\n        this.setState({personinfo:updateForm,formIsValid:isformvalid});\r\n        //console.log(updateElement);\r\n\r\n    }\r\n\r\n\r\n    render(){\r\n        const customer=[];\r\n        for(let customerData in this.state.personinfo){\r\n            customer.push(\r\n                {\r\n                    id:customerData,\r\n                    config:this.state.personinfo[customerData],\r\n                }\r\n            )\r\n        }\r\n        //console.log(customer);\r\n        let content=(\r\n            customer.map(customerelement=>{\r\n                return(\r\n                 <Input key={customerelement.id}\r\n                 inputtype={customerelement.config.elementType} \r\n                 elementConfig={customerelement.config.elementConfig} \r\n                 invalid={!customerelement.config.validity}\r\n                 shouldValidate={customerelement.config.validation}\r\n                 changed={(event)=>this.changeHandler(event,customerelement.id)}\r\n                 touched={customerelement.config.touched}\r\n                 value={customerelement.value}>\r\n\r\n                 </Input>\r\n                \r\n                )  \r\n            })\r\n        )\r\n\r\n        return(\r\n            <div className={classes.Contact}>\r\n               <h3>Contact Details</h3>\r\n               <form onSubmit={this.orderHandler}>\r\n                   {content}\r\n                 <Button type=\"Success\" disable={!this.state.formIsValid}>SUBMIT</Button>\r\n               </form>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n \r\nconst mapStateToProps=state=>{\r\n    return{ \r\n        ings:state.burgerbuilder.ingredients,\r\n        price:state.burgerbuilder.totalprice,\r\n        loading:state.order.loading,\r\n        token:state.auth.token,\r\n        userId:state.auth.userId\r\n\r\n    }\r\n}\r\nconst mapToDispatch=dispatch=>{\r\n    return{\r\n   onPurchase: (orderData,token)=>dispatch(actions.initPurchase(orderData,token))\r\n    }\r\n \r\n}\r\nexport default connect(mapStateToProps,mapToDispatch)(WithErrorHandler(Contact,axios));","import React,{ Component } from 'react';\r\nimport Checkoutsummary from '../../components/CheckoutSummary/checkoutsummary';\r\nimport {Route,Redirect} from 'react-router-dom';\r\nimport Contact from '../ContactData/contactdata';\r\nimport {connect} from 'react-redux'\r\nimport *as action from '../../store/actions/index';\r\n\r\n\r\nclass Checkout extends Component {\r\n    \r\n\r\n    cancelHandler=()=>{\r\n        this.props.history.push('/');\r\n    }\r\n    continueHandler=()=>{\r\n        this.props.history.push('/checkout/contact-data');\r\n    }\r\n    render(){\r\n        //console.log(\"checkout\");\r\n        let summary=<Redirect to=\"/\" />\r\n        \r\n        if(this.props.building)\r\n        {\r\n            this.props.purchaseinit();\r\n            const purchaseRedirect=this.props.purchased?<Redirect to=\"/\"/>:null;\r\n            //console.log(\"after Purchase\",purchaseRedirect);\r\n            summary=(\r\n                \r\n                <div style={{width:\"80%\", margin:\"auto\" }}>\r\n                    \r\n                <Checkoutsummary \r\n                ingredients={this.props.ings} \r\n                cancel={this.cancelHandler}\r\n                continue={this.continueHandler}/>\r\n                <Route \r\n                path={this.props.match.path+'/contact-data'} \r\n                component={Contact}/>\r\n                {purchaseRedirect}\r\n               \r\n      </div>\r\n\r\n\r\n                \r\n            )\r\n        }\r\n        //console.log(this.props.ings);\r\n        return summary;\r\n            \r\n            \r\n    }\r\n}\r\nconst mapStateToprops=state=>{\r\n    return{\r\n        ings:state.burgerbuilder.ingredients,\r\n        purchased:state.order.purchasing,\r\n        building:state.burgerbuilder.building\r\n    }\r\n    \r\n}\r\nconst mapDispatchToProps=dispatch=>{\r\n    return{\r\n        purchaseinit:()=>dispatch(action.purchaseInit())\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToprops,mapDispatchToProps)(Checkout);","import React from 'react';\r\nimport classes from './Order.module.css';\r\n\r\nconst order=(props)=>{\r\n   // console.log(props.ingredients);\r\n    const ingredients=[];\r\n    for(let ingredientname in props.ingredients)\r\n    {\r\n        ingredients.push({\r\n            name:ingredientname,\r\n            amount:props.ingredients[ingredientname],\r\n        })\r\n    }\r\n    //console.log(\"order-details\");\r\n   // console.log(ingredients);\r\n   const ingredientoutput=\r\n        ingredients.map(ig=>{\r\n            return(\r\n            <div>\r\n                <span>{ig.name}({ig.amount})</span>\r\n            </div>\r\n            )\r\n            }\r\n        )\r\n    \r\n    return(\r\n        <div className={classes.Order}>\r\n           <p>ingredients: {ingredientoutput} </p>\r\n               <div>\r\n               price:{props.price}\r\n               </div>\r\n                \r\n            \r\n        </div>\r\n    )\r\n}\r\nexport default order;","import React,{Component} from 'react';\r\nimport Order from '../../components/Order/Order';\r\n//import axios from '../../axios-orders';\r\nimport {connect} from 'react-redux';\r\nimport *as action from '../../store/actions/index';\r\n\r\nclass Orders extends Component {\r\n\r\n   \r\n    componentDidMount(){\r\n       // console.log(this.props.token,this.props.userId);\r\n        this.props.onFetching(this.props.token,this.props.userId);\r\n    }\r\n    render(){\r\n        //console.log(\"orders\",this.props.orders);\r\n        let content=(\r\n            <div>\r\n            {\r\n                this.props.orders.map(ig=>{\r\n                    return(\r\n                        <Order\r\n                         ingredients={ig.ingredients}\r\n                          price={ig.price}\r\n                           key={ig.id}/>\r\n                    )\r\n                })\r\n            }\r\n           \r\n            \r\n        </div>\r\n        )\r\n        if(this.props.token===null){\r\n            content=(\r\n                <div>\r\n                Please Login To View Your Order\r\n                </div>\r\n            )\r\n        }\r\n        return(\r\n            <div>\r\n            {content}\r\n            </div>\r\n        )\r\n    }\r\n}\r\nconst mapStateToProps=state=>{\r\n    return{\r\n        orders:state.order.orders,\r\n        loading:state.order.loading,\r\n        token:state.auth.token,\r\n        userId:state.auth.userId\r\n       \r\n    }\r\n}\r\nconst mapDispatchToProps=dispatch=>{\r\n    return{\r\n        onFetching:(token,userId)=>dispatch(action.initFetchOrder(token,userId))\r\n    }\r\n}\r\nexport default connect(mapStateToProps,mapDispatchToProps)(Orders);"," import React,{Component} from 'react';\r\nimport Input from '../../components/UI/Input/input';\r\nimport Button from '../../components/UI/Button/Button';\r\nimport {connect} from 'react-redux';\r\nimport * as action from '../../store/actions/index';\r\nimport Spinner from '../../components/UI/Spinner/Spinner';\r\nimport {Redirect} from 'react-router-dom';\r\n\r\nclass Auth extends Component{\r\n    state={\r\n        controls:{\r\n                \r\n            email:{\r\n                elementType:'input',\r\n                elementConfig:{\r\n                    placeholder:'Your mail-id',\r\n                    type:'email',\r\n                },\r\n                value:'',\r\n                validation:{\r\n                    required:true,\r\n                   \r\n                },\r\n                validity:false,\r\n                touched:false\r\n\r\n            },\r\n            password:{\r\n                elementType:'input',\r\n                elementConfig:{\r\n                    placeholder:'Your state',\r\n                    type:'text',\r\n                },\r\n                value:'',\r\n                validation:{\r\n                    required:true,\r\n                    \r\n                },\r\n                validity:false,\r\n                touched:false\r\n                \r\n            }\r\n        },\r\n        formIsValid:false,\r\n        isSignup:true\r\n    }\r\n\r\n\r\n    checkValidity=(value,rules)=>{\r\n        let validity=true;\r\n        if(!rules)\r\n        {\r\n            return true;\r\n        }\r\n        if(rules.required)\r\n        {\r\n            validity=value.trim()!=='' && validity;\r\n        }\r\n        \r\n        return validity;\r\n\r\n    }\r\n    changeHandler=(event,index)=>{\r\n        const updateForm={\r\n            ...this.state.controls\r\n        }\r\n        const updateElement={\r\n            ...updateForm[index]\r\n        }\r\n        updateElement.value=event.target.value;\r\n        updateElement.validity=this.checkValidity(updateElement.value,updateElement.validation);\r\n        updateElement.touched=true;\r\n        updateForm[index]={...updateElement};\r\n        let isformvalid=true;\r\n        for(let updatedformelement in updateForm)\r\n        {\r\n           isformvalid=updateForm[updatedformelement].validity && isformvalid;\r\n        }\r\n        //console.log(isformvalid);\r\n        this.setState({controls:updateForm,formIsValid:isformvalid});\r\n        //console.log(updateElement);\r\n\r\n    }\r\n    submitHandler=(event)=>{\r\n        event.preventDefault();\r\n        this.props.onAuth(this.state.controls.email.value,this.state.controls.password.value,this.state.isSignup);\r\n        \r\n    }\r\n    signupHandler=()=>{\r\n        let prevState={...this.state};\r\n        //console.log(prevState);\r\n        if(prevState.isSignup===true)\r\n        this.setState({isSignup:false});\r\n        else\r\n        this.setState({isSignup:true});\r\n        //console.log(\"signup\",this.state.isSignup)\r\n    }\r\n     render(){\r\n         let redirec=null;\r\n         //console.log(\"onSubmit\",this.props.token);\r\n         if(this.props.token!==null && this.props.building===true)\r\n         {\r\n           redirec=(<Redirect to=\"/checkout\"></Redirect>)\r\n         }\r\n         else if(this.props.token!==null && this.props.building===false)\r\n         {\r\n             redirec=(<Redirect to=\"/\"></Redirect>)\r\n         }\r\n         \r\n         let customer=[];\r\n         for(let customerData in this.state.controls){\r\n            customer.push(\r\n                {\r\n                    id:customerData,\r\n                    config:this.state.controls[customerData],\r\n                }\r\n            )\r\n        }\r\n         let content=(\r\n            customer.map(customerelement=>{return(\r\n                <Input key={customerelement.id}\r\n                inputtype={customerelement.config.elementType} \r\n                elementConfig={customerelement.config.elementConfig} \r\n                invalid={!customerelement.config.validity}\r\n                shouldValidate={customerelement.config.validation}\r\n                changed={(event)=>this.changeHandler(event,customerelement.id)}\r\n                touched={customerelement.config.touched}\r\n                value={customerelement.value}>\r\n\r\n                </Input>\r\n               )\r\n               \r\n           })\r\n         )\r\n         //console.log(\"loading\",this.props.loading)\r\n           if(this.props.loading===true)\r\n            {\r\n                content=<Spinner/>\r\n            }\r\n           \r\n            \r\n            \r\n         return(\r\n            <div>\r\n            {redirec}\r\n            <h3>Contact Details</h3>\r\n         <form onSubmit={this.submitHandler}>\r\n            \r\n                 {content}\r\n            \r\n             <Button type=\"Success\" disable={!this.state.formIsValid}>SUBMIT</Button>\r\n         </form>\r\n         <Button clicked={this.signupHandler} type=\"Danger\">Switch To {this.state.isSignup?'SignIn':'Signup'}</Button>\r\n\r\n       </div>\r\n         )\r\n         \r\n     }\r\n}\r\nconst mapStateToProps=state=>{\r\n    return{\r\n    loading:state.auth.loading,\r\n    isIngs:state.burgerbuilder.ingredients!==null,\r\n    token:state.auth.token,\r\n    building:state.burgerbuilder.building\r\n    }\r\n}\r\nconst mapDispatchToProps=(dispatch)=>{\r\n   // console.log(this.state.isSignup);\r\n    return{\r\n        onAuth:(email,password,isSignup)=>dispatch(action.auth(email,password,isSignup))\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps,mapDispatchToProps)(Auth);","import React,{Component} from 'react';\r\nimport {connect} from 'react-redux';\r\nimport * as action from '../../store/actions/index';\r\nimport {Redirect} from 'react-router-dom';\r\n\r\nclass Logout extends Component {\r\n    componentDidMount(){\r\n        this.props.onLogout();\r\n    }\r\n    render(){\r\n        \r\n        return  <Redirect to=\"/\"/>;\r\n        \r\n    }\r\n}\r\nconst mapDispatchToProps=dispatch=>{\r\n    return{\r\n         onLogout:()=>dispatch(action.logout())\r\n    }\r\n}\r\nexport default connect(null,mapDispatchToProps)(Logout);","import React,{Component} from 'react';\nimport Layout from './components/Layout/Layout';\nimport BurgerBuilder from './containers/burger-bulder/burgerbuilder';\nimport Checkout from './containers/Checkout/checkout';\nimport {Switch,Route,withRouter} from 'react-router-dom';\nimport Orders from './containers/Orders/orders';\nimport Auth from \"./containers/Auth/Auth\";\nimport Logout from './containers/Logout/logout';\nimport {connect} from 'react-redux';\nimport * as action from './store/actions/index';\nclass App extends Component{\n  componentDidMount(){\n   this.props.onLogout();\n   \n   \n }\n render(){\n  \n  return (\n    <div >\n     <Layout>\n       <Switch>\n       <Route path=\"/orders\" component={Orders}/>\n       <Route path=\"/checkout\" component={Checkout}></Route>\n       <Route path=\"/Auth\" component={Auth}></Route>\n       <Route path=\"/logout\" component={Logout}></Route>\n       <Route path=\"/\" exact component={BurgerBuilder}></Route> \n        </Switch>\n     </Layout>\n    </div> \n  );\n  }\n}\nconst mapDispatchToprops=dispatch=>{\n  return{\n    onLogout:()=>dispatch(action.checkStatus())\n  }\n}\n\nexport default withRouter(connect(null,mapDispatchToprops)(App));\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import * as actionTypes from '../actions/action';\r\nconst price={\r\n    salad:3,\r\n    bacon:7,\r\n    cheese:6,\r\n    meat:7\r\n}\r\n\r\nconst initialstate={\r\n    ingredients:null,\r\n    totalprice:20,\r\n    error:false,\r\n    building:false\r\n}\r\n\r\n\r\nconst reducer=(state=initialstate,action)=>{\r\n    //console.log(action);\r\n    //console.log(initialstate);\r\n    switch(action.type)\r\n    {\r\n    case actionTypes.ADD_INGREDIENT:\r\n       // console.log(action.ingredientName);\r\n        return{\r\n             ...state,\r\n             ingredients:{\r\n                 ...state.ingredients,\r\n                 [action.ingredientName]:state.ingredients[action.ingredientName]+1\r\n             },\r\n             totalprice:state.totalprice+price[action.ingredientName],\r\n             building:true\r\n        }\r\n    case actionTypes.REMOVE_INGREDIENT:\r\n        //console.log(action.ingredientName);\r\n        return{\r\n            ...state,\r\n             ingredients:{\r\n                 ...state.ingredients,\r\n                 [action.ingredientName]:state.ingredients[action.ingredientName]-1\r\n             },\r\n             totalprice:state.totalprice-price[action.ingredientName],\r\n             building:true\r\n        }\r\n    case actionTypes.SET_INGREDIENT:\r\n        return{\r\n            ...state,\r\n            ingredients:action.ingredientlist,\r\n            error:false,\r\n            totalprice:20,\r\n            building:false\r\n        }\r\n    case actionTypes.FAILED:\r\n        return{\r\n            ...state,\r\n            error:true ,\r\n            building:false\r\n        }\r\n    default:\r\n        //console.log('---');\r\n        return state;\r\n    }\r\n};\r\n\r\n\r\n\r\nexport default reducer;","import *as actionTypes from '../actions/action';\r\n\r\nconst initialstate={\r\n     orders:[],\r\n     loading:false,\r\n     purchasing:false,\r\n     error:null\r\n}\r\n\r\nconst reducer=(state=initialstate,action)=>{\r\n    switch(action.type)\r\n    {\r\n        case actionTypes.PURCHASE_INIT:{\r\n            return {\r\n                ...state,\r\n                purchasing:false,\r\n            }\r\n        }\r\n        case actionTypes.PURCHASE_START:\r\n            return{\r\n                ...state,\r\n                loading:true\r\n            }\r\n        case actionTypes.PURCHASE_SUCCESS:\r\n            const newOrder={\r\n                ...action.orderData,\r\n                id:action.orderId,\r\n                \r\n                \r\n                \r\n            }\r\n            return{\r\n                ...state,\r\n               orders:state.orders.concat(newOrder),\r\n               loading:false,\r\n               purchasing:true\r\n            }\r\n        case actionTypes.PURCHASE_FAILURE:\r\n            return {\r\n                 ...state,\r\n                 loading :false,\r\n                 error:action.error\r\n            }\r\n        case actionTypes.FETCHORDER_START:\r\n            return{\r\n                ...state,\r\n                loading:true\r\n            }\r\n        case actionTypes.FETCHORDER_SUCCESS:\r\n            return{\r\n                ...state,\r\n                loading:false,\r\n                orders:action.order\r\n\r\n            }\r\n        case actionTypes.FETCHORDER_FAILURE:\r\n            return{\r\n                ...state,\r\n                loading:false\r\n            }\r\n        default:\r\n            return state;\r\n    }\r\n}\r\nexport default reducer;","import * as actionTypes from '../actions/action';\r\n\r\n\r\nconst initialstate={\r\n    token:null,\r\n    userId:null,\r\n    error:null,\r\n    loading:false,\r\n\r\n}\r\nconst reducer=(state=initialstate,action)=>{\r\n\r\n    \r\n    switch(action.type){\r\n        case actionTypes.AUTH_START:\r\n            //console.log(state);\r\n            return{\r\n                ...state,\r\n                loading:true,\r\n                \r\n            }\r\n        case actionTypes.AUTH_SUCCESS:\r\n            //console.log(state);\r\n            return{\r\n                ...state,\r\n                token:action.token,\r\n                userId:action.userId,\r\n                loading:false,\r\n                \r\n\r\n            }\r\n        case actionTypes.AUTH_FAILURE:\r\n            //console.log(state);\r\n            return{\r\n                ...state,\r\n                error:action.err,\r\n                loading:false,\r\n                \r\n            }\r\n        case actionTypes.LOGOUT:\r\n            return{\r\n                ...state,\r\n                token:null,\r\n                error:null,\r\n                loading:false,\r\n                userId:null\r\n            }\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport default reducer;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport {BrowserRouter} from 'react-router-dom';\nimport {Provider} from 'react-redux';\nimport {createStore,applyMiddleware,compose, combineReducers} from 'redux';\nimport reducer from './store/reducer/reducer'\nimport thunk from 'redux-thunk';\nimport orderreducer from './store/reducer/order';\nimport authreducer from './store/reducer/auth';\n\nconst rootreducer=combineReducers({\n    burgerbuilder:reducer,\n    order:orderreducer,\n    auth:authreducer\n});\n\nconst composeEnhancers =process.env.NODE_ENV ==='development'? window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ :null|| compose;\nconst store=createStore(rootreducer,composeEnhancers(applyMiddleware(thunk)));\n\nconst app=(\n    <Provider store={store}>\n    <BrowserRouter>\n       <App />\n    </BrowserRouter>\n    </Provider>\n)\n\nReactDOM.render(app, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}